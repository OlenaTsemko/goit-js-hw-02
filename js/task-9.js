/* –ó–∞–¥–∞—á–∞ 2-9
–ï—Å—Ç—å –º–∞—Å—Å–∏–≤ logins —Å –ª–æ–≥–∏–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. 
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ –≤ –º–∞—Å—Å–∏–≤ logins. 
–î–æ–±–∞–≤–ª—è–µ–º—ã–π –ª–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω:

- –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –¥–ª–∏–Ω—É –æ—Ç 4 –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
- –±—ã—Ç—å —É–Ω–∏–∫–∞–ª–µ–Ω, —Ç–æ –µ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ logins

–†–∞–∑–±–µ–π –∑–∞–¥–∞—á—É –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π.
–ü—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π 
—Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.

1. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é isLoginValid(login), –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–≤–µ—Ä—å 
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ login –∏ –≤–µ—Ä–Ω–∏ true –∏–ª–∏ false 
–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –¥–ª–∏–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 
–≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 4-—Ö –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.

2. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é isLoginUnique(allLogins, login), 
–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º—ã–π –ª–æ–≥–∏–Ω 
–∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ login –≤ –º–∞—Å—Å–∏–≤–µ allLogins, 
–≤–æ–∑–≤—Ä–∞—â–∞—è true –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –µ—â–µ –Ω–µ—Ç –∏ false 
–µ—Å–ª–∏ –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.

3. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é addLogin(allLogins, login) –∫–æ—Ç–æ—Ä–∞—è:
- –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω –∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é 
—Ñ—É–Ω–∫—Ü–∏—é isLoginValid
- –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ addLogin 
–∏ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
- –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –≤–∞–ª–∏–¥–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è addLogin –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å 
–ª–æ–≥–∏–Ω–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ isLoginUnique
- –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç false, —Ç–æ–≥–¥–∞ addLogin –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç 
–ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'
- –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç true, addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω 
–≤ logins –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'


üîî –ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ 
- –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç 
–ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –∏–∑–º–µ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ 
–≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ü–µ–ª–æ–º.

–ü—Ä–µ–¥–∏–∫–∞—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ç–æ–ª—å–∫–æ true –∏–ª–∏ false. 
–¢–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å –Ω–∞—á–∏–Ω–∞—è —Å is: isLoginUnique 
–∏ isLoginValid –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ.

- isLoginUnique —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ª–æ–≥–∏–Ω –≤ 
–º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.
- isLoginValid —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π –ª–∏ –ª–æ–≥–∏–Ω 
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.
- addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤. 
–ü—Ä–∏ —ç—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —É—Å–ª–æ–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã 
–≤—ã–∑–æ–≤–æ–≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π - isLoginUnique –∏ isLoginValid. */

const isLoginValid = (login, min = 4, max = 16) =>
  login.length >= min && login.length <= max;

const isLoginUnique = (allLogins, login) => !allLogins.includes(login);

function addLogin(allLogins, login) {
  const SUCCESS = '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!';
  const REFUSAL = '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!';
  const ERROR = '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–º–µ—Ä–æ–º –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤';

  if (!isLoginValid(login)) {
    return ERROR;
  } else if (!isLoginUnique(allLogins, login)) {
    return REFUSAL;
  } else {
    allLogins.push(login);
    console.log(allLogins);
  }

  return SUCCESS;
}

const logins = ['Mango', 'robotGoogles', 'Poly', 'Aj4x1sBozz', 'qwerty123'];

console.log(addLogin(logins, 'Ajax'));
// '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'

console.log(addLogin(logins, 'robotGoogles'));
// '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'

console.log(addLogin(logins, 'Zod'));
// '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'

console.log(addLogin(logins, 'jqueryisextremelyfast'));
// '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'

// —Ä–∞–±–æ—á–∏–π –≤–∞—Ä–∏–∞–Ω—Ç

// const isLoginValid = login => login.length >= 4 && login.length <= 16;

// const isLoginUnique = (allLogins, login) =>
//   allLogins.includes(login) ? false : true;

// function isLoginUnique(allLogins, login) {
//   if (allLogins.includes(login)) {
//     return false;
//   }
//   return true;
// }

// const addLogin = function (allLogins, login) {
//   const SUCCESS = '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!';
//   const REFUSAL = '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!';
//   const ERROR = '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–º–µ—Ä–æ–º –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤';
//   let message;

//   if (
//     isLoginValid(login) === true &&
//     isLoginUnique(allLogins, login) === true
//   ) {
//     allLogins.push(login);
//     console.log(logins);
//     message = SUCCESS;
//     return message;
//   } else if (isLoginValid(login) === false) {
//     message = ERROR;
//     return message;
//   } else if (isLoginUnique(allLogins, login) === false) {
//     message = REFUSAL;
//     return message;
//   }
// };

// function addLogin(allLogins, login) {
//   const SUCCESS = '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!';
//   const REFUSAL = '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!';
//   const ERROR = '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–º–µ—Ä–æ–º –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤';

//   if (isLoginValid(login) === false) {
//     return ERROR;
//   }

//   if (isLoginUnique(allLogins, login) === false) {
//     return REFUSAL;
//   }

//   if (isLoginUnique(allLogins, login) === true) {
//     allLogins.push(login);
//     // console.log(logins);
//   }

//   return SUCCESS;
// }
